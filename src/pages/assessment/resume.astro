---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import FloatingActionButton from '../../components/FloatingActionButton.astro';
import { supabase } from '../../lib/supabase';

// Get assessment ID and token from URL parameters
const assessmentId = Astro.url.searchParams.get('assessmentId');
const token = Astro.url.searchParams.get('token');

let assessmentData = null;
let userData = null;
let error = null;

// Verify the assessment exists and token is valid
if (assessmentId && token) {
  const { data, error: assessmentError } = await supabase
    .from('assessments')
    .select('id, user_id, status, last_question_id')
    .eq('id', assessmentId)
    .eq('token', token)
    .single();

  if (assessmentError) {
    console.error('Error verifying assessment:', assessmentError);
    error = 'Invalid assessment or token. Please start a new assessment.';
  } else {
    assessmentData = data;

    // Get user data
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('first_name, last_name, email')
      .eq('id', assessmentData.user_id)
      .single();

    if (userError) {
      console.error('Error fetching user data:', userError);
    } else {
      userData = user;
    }
  }
} else {
  error = 'Missing assessment ID or token. Please start a new assessment.';
}
---

<Layout title="Resume Assessment - Day 41 Thrive">
    <Header />
    <main class="resume-page">
        <section class="resume-section">
            <div class="container">
                <div class="resume-card">
                    {error ? (
                        <div class="error-content">
                            <h1>Error</h1>
                            <p>{error}</p>
                            <a href="/assessment/start" class="btn">Start a New Assessment</a>
                        </div>
                    ) : (
                        <div class="resume-content">
                            <h1>Resume Your Assessment</h1>
                            {userData && (
                                <p class="welcome-message">Welcome back, {userData.first_name}!</p>
                            )}
                            <p>You have an assessment in progress. Would you like to continue where you left off?</p>
                            
                            <div class="status-info">
                                <p><strong>Status:</strong> {assessmentData?.status === 'in_progress' ? 'In Progress' : 'Completed'}</p>
                            </div>
                            
                            <div class="action-buttons">
                                <a href={`/assessment/questions?assessmentId=${assessmentId}&token=${token}`} class="btn resume-btn">
                                    Continue Assessment
                                </a>
                                <a href="/assessment/start" class="btn new-btn">
                                    Start a New Assessment
                                </a>
                            </div>
                        </div>
                    )}
                </div>
            </div>
        </section>
    </main>
    <FloatingActionButton />
</Layout>

<style>
    .resume-page {
        padding-top: 80px;
    }

    .resume-section {
        padding: 4rem 0;
        background: rgba(255, 20, 147, 0.05);
        min-height: calc(100vh - 80px);
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 0 1.5rem;
    }

    .resume-card {
        background: var(--card-bg);
        padding: 2.5rem;
        border-radius: 0.5rem;
        border: 1px solid var(--primary);
        box-shadow: 0 4px 20px rgba(255, 20, 147, 0.1);
    }

    h1 {
        color: var(--primary);
        font-size: clamp(1.75rem, 3vw, 2.25rem);
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .welcome-message {
        font-size: 1.2rem;
        color: var(--secondary);
        margin-bottom: 1.5rem;
        text-align: center;
    }

    p {
        color: var(--text);
        font-size: 1.1rem;
        line-height: 1.6;
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .status-info {
        background: rgba(255, 20, 147, 0.1);
        padding: 1rem;
        border-radius: 0.5rem;
        margin-bottom: 2rem;
        text-align: center;
    }

    .action-buttons {
        display: flex;
        justify-content: center;
        gap: 1.5rem;
        margin-top: 2rem;
    }

    .btn {
        padding: 1rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        text-align: center;
    }

    .resume-btn {
        background: var(--primary);
        color: white;
    }

    .resume-btn:hover {
        background: var(--secondary);
        transform: translateY(-2px);
    }

    .new-btn {
        background: transparent;
        border: 2px solid var(--primary);
        color: var(--primary);
    }

    .new-btn:hover {
        background: rgba(255, 20, 147, 0.1);
        transform: translateY(-2px);
    }

    .error-content {
        text-align: center;
    }

    @media (max-width: 768px) {
        .resume-section {
            padding: 2rem 0;
        }

        .resume-card {
            padding: 1.5rem;
            margin: 0 1rem;
        }

        .action-buttons {
            flex-direction: column;
            gap: 1rem;
        }

        .btn {
            width: 100%;
        }
    }
</style>